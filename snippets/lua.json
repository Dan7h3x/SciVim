{
  "Module Table": {
    "prefix": "mod",
    "body": [
      "local ${1:module} = {}",
      "",
      "function ${1:module}.${2:function}(${3:args})",
      "    ${0:-- body}",
      "end",
      "",
      "return ${1:module}"
    ],
    "description": "Lua module structure"
  },

  "Function": {
    "prefix": "fun",
    "body": ["local function ${1:name}(${2:args})", "    ${0:-- body}", "end"],
    "description": "Lua function"
  },

  "If Statement": {
    "prefix": "if",
    "body": ["if ${1:condition} then", "    ${0:-- body}", "end"],
    "description": "If statement"
  },

  "For Loop": {
    "prefix": "for",
    "body": ["for ${1:i} = ${2:1}, ${3:10} do", "    ${0:-- body}", "end"],
    "description": "Numeric for loop"
  },

  "For Pairs": {
    "prefix": "forp",
    "body": [
      "for ${1:key}, ${2:value} in pairs(${3:table}) do",
      "    ${0:-- body}",
      "end"
    ],
    "description": "Generic for loop with pairs"
  },

  "Table": {
    "prefix": "tbl",
    "body": [
      "local ${1:t} = {",
      "    ${2:key} = ${3:value},",
      "    ${0:...}",
      "}"
    ],
    "description": "Lua table"
  },

  "Metatable": {
    "prefix": "meta",
    "body": [
      "local ${1:mt} = {",
      "    __index = function(t, k)",
      "        ${0:-- metamethod}",
      "    end,",
      "}"
    ],
    "description": "Metatable with __index"
  },

  "Neovim API Command": {
    "prefix": "vimcmd",
    "body": "vim.api.nvim_${1:command}(${2:args})",
    "description": "Neovim API call"
  },

  "Error Handling": {
    "prefix": "pcall",
    "body": [
      "local ok, err = pcall(function()",
      "    ${1:code}",
      "end)",
      "",
      "if not ok then",
      "    ${2:error_handler}",
      "end"
    ],
    "description": "Protected call with error handling"
  }
}

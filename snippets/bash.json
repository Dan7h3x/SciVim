{
  "Shebang": {
    "prefix": "shebang",
    "body": "#!/usr/bin/env bash",
    "description": "Bash shebang line"
  },

  "Script Header": {
    "prefix": "header",
    "body": [
      "#!/usr/bin/env bash",
      "#",
      "# ${1:Description}",
      "#",
      "# Usage: ${2:script} [options]",
      "#",
      "# Options:",
      "#   -h  Show this help",
      "#   -v  Print version info",
      "",
      "set -eo pipefail"
    ],
    "description": "Professional bash script header"
  },

  "Function": {
    "prefix": "func",
    "body": [
      "${1:name}() {",
      "    local ${2:arg}=\"$1\"",
      "    ${0:# body}",
      "}"
    ],
    "description": "Bash function"
  },

  "Argument Parsing": {
    "prefix": "args",
    "body": [
      "while [[ \"$#\" -gt 0 ]]; do",
      "    case \"$1\" in",
      "        -${1:h}|--help)",
      "            shift",
      "            ${2:show_help}",
      "            exit 0",
      "            ;;",
      "        -${3:v}|--version)",
      "            shift",
      "            ${4:show_version}",
      "            exit 0",
      "            ;;",
      "        --*)",
      "            echo \"Unknown option $1\"",
      "            exit 1",
      "            ;;",
      "        *)",
      "            ${5:args+=(\"$1\")}",
      "            shift",
      "            ;;",
      "    esac",
      "done"
    ],
    "description": "Bash argument parsing"
  },

  "Trap": {
    "prefix": "trap",
    "body": [
      "cleanup() {",
      "    ${1:# cleanup code}",
      "}",
      "",
      "trap cleanup EXIT INT TERM"
    ],
    "description": "Cleanup trap"
  },

  "Logging": {
    "prefix": "log",
    "body": [
      "log() {",
      "    local level=\"$1\"",
      "    local message=\"$2\"",
      "    local timestamp=$(date +\"%Y-%m-%d %T\")",
      "    echo \"${timestamp} [${level}] ${message}\"",
      "}",
      "",
      "# Usage: log INFO \"Message\""
    ],
    "description": "Logging function"
  },

  "Check Dependency": {
    "prefix": "check",
    "body": [
      "if ! command -v ${1:command} &> /dev/null; then",
      "    echo \"Error: ${1:command} not found\"",
      "    exit 1",
      "fi"
    ],
    "description": "Check if command exists"
  },

  "Subprocess": {
    "prefix": "sub",
    "body": [
      "if ! ${1:output}=$(command ${2:args} 2>&1); then",
      "    echo \"Error: ${1:output}\"",
      "    exit 1",
      "fi"
    ],
    "description": "Safe subprocess execution"
  },

  "Array Loop": {
    "prefix": "array",
    "body": [
      "for ${1:item} in \"${${2:array}[@]}\"; do",
      "    ${0:# process item}",
      "done"
    ],
    "description": "Loop through array"
  }
}
